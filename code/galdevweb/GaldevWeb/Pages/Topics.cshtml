@page
@model TopicsModel
@inject LinkGenerator Links
@{
    ViewData["Active"] = "Topics";
}

<div class="row mt-3">
    <div class="col-12">
        <h1>
            @Model.I18n.String(path: "Title", i18n: new StringGeneratorI18n {
            ["de-DE"] = () => "Geschichte in Themen",
            ["en-US"] = () => "History by Topic"
            })
        </h1>
    </div>
</div>

@{
    var cards = new List<Node>();

    foreach (var topic in Model.Timeline.Topics) {
        cards.Add(Node.From(new Dictionary<string, string> {
                    ["Id"] = "id-" + topic,
                    ["Title"] = Model.Timeline.GetTitleOfTopic(topic),
                    ["Anchor"] = topic,
                    ["Text"] = string.Join("<br/>",
                Model.Timeline.GetEntriesOfTopic(topic)
                .Select(entry => $"<a href='{Links.GetPathByPage("/Timeline", null, new { name = entry.SeoTitle })}'>{entry.Year} {entry.DisplayName}</a>")
                )
                }));
    }
}

@await Html.PartialAsync("_Cards", cards, ViewData)

@section Scripts {
    <script>
        $(document).ready(function () {
            var hash = window.location.hash.substring(1);
            if (hash) {
                $("#id-" + hash).addClass("card-body-hilite");
            }
        });
    </script>
}
